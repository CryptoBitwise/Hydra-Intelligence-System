name: 🐉 HYDRA Intelligence Collection

on:
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'
  
  workflow_dispatch:
    inputs:
      competitors:
        description: 'Competitors to analyze (comma-separated)'
        required: false
        default: 'competitor1.com,competitor2.com'

jobs:
  collect-intelligence:
    runs-on: ubuntu-latest
    env:
      # Optional: Use Bright Data while we have credits
      BRIGHT_DATA_KEY: ${{ secrets.BRIGHT_DATA_KEY }}
    
    steps:
    - name: 🔧 Checkout HYDRA
      uses: actions/checkout@v4
    
    - name: 🐍 Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r HYDRA-FREE/requirements.txt
        pip install playwright
        playwright install chromium
    
    - name: 🔍 Collect Intelligence
      run: |
        python HYDRA-FREE/hydra.py collect \
          --competitors "${{ github.event.inputs.competitors || 'competitor1.com,competitor2.com' }}"
    
    - name: 📊 Generate Report
      run: |
        python HYDRA-FREE/hydra.py report --hours 24
    
    - name: 📈 Export Dashboard Data
      run: |
        mkdir -p docs
        python -c "import runpy,shutil; m=runpy.run_path('HYDRA-FREE/hydra.py'); HydraFree=m['HydraFree']; h=HydraFree(); h.export_dashboard('HYDRA-FREE/dashboard/data.json'); shutil.copy('HYDRA-FREE/dashboard/data.json','docs/data.json'); shutil.copy('HYDRA-FREE/dashboard/index.html','docs/index.html')"
    
    - name: 🌐 Deploy Dashboard to GitHub Pages
      run: |
        git config user.name "HYDRA Bot"
        git config user.email "hydra@bot.com"
        git add docs/
        git commit -m "🐉 HYDRA: Intelligence Update $(date)" || true
        git push || true
    
    - name: 🚨 Check for Critical Threats
      id: threats
      run: |
        python -c "import os,sqlite3; conn=sqlite3.connect('hydra.db'); c=conn.execute('SELECT COUNT(*) FROM intelligence WHERE threat_level=\"critical\" AND datetime(timestamp) > datetime(\"now\", \"-6 hours\")').fetchone()[0]; print(f'found={c>0}'); print(f'count={c}'); open(os.environ['GITHUB_OUTPUT'],'a').write(f'found={'true' if c>0 else 'false'}\ncount={c}\n')"
    
    - name: 📢 Send Alert (if critical)
      if: steps.threats.outputs.found == 'true'
      uses: 8398a7/action-slack@v3
      with:
        status: custom
        custom_payload: |
          {
            text: "🚨 HYDRA ALERT: ${{ steps.threats.outputs.count }} critical threats detected!",
            attachments: [{
              color: 'danger',
              text: 'Check dashboard for details: https://${{ github.repository_owner }}.github.io/hydra'
            }]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
    
    - name: 💾 Save Database
      uses: actions/upload-artifact@v4
      with:
        name: hydra-intelligence
        path: hydra.db


